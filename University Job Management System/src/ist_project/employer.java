/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ist_project;

import static com.microsoft.sqlserver.jdbc.StringUtils.isEmpty;
import static ist_project.application.id;
import static ist_project.student.id;
import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Surji
 */
public class employer extends javax.swing.JFrame {
    public static String id;

    /**
     * Creates new form student
     */
    public employer() {
        initComponents();
    }
    public String getVal(String arg){
        id = arg;
        return id;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        accRej = new javax.swing.JButton();
        postJob = new javax.swing.JButton();
        viewApp = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        appId = new javax.swing.JTextField();
        accept = new javax.swing.JButton();
        reject = new javax.swing.JButton();
        jobNameLabel = new javax.swing.JLabel();
        descLabel = new javax.swing.JLabel();
        jobTypeLabel = new javax.swing.JLabel();
        deadLabel = new javax.swing.JLabel();
        urlLabel = new javax.swing.JLabel();
        locLabel = new javax.swing.JLabel();
        jobIdLabel = new javax.swing.JLabel();
        jobNameField = new javax.swing.JTextField();
        descField = new javax.swing.JTextField();
        jobIdField = new javax.swing.JTextField();
        jobTypeField = new javax.swing.JTextField();
        locField = new javax.swing.JTextField();
        urlField = new javax.swing.JTextField();
        deadField = new javax.swing.JTextField();
        post = new javax.swing.JButton();
        logout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Employer");
        setBounds(new java.awt.Rectangle(200, 200, 200, 200));
        setPreferredSize(new java.awt.Dimension(600, 400));
        setSize(new java.awt.Dimension(600, 400));

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        accRej.setText("Accept/Reject");
        accRej.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accRejActionPerformed(evt);
            }
        });

        postJob.setText("Post Job");
        postJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postJobActionPerformed(evt);
            }
        });

        viewApp.setText("View Application");
        viewApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAppActionPerformed(evt);
            }
        });

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Application Id");
        jLabel1.setEnabled(false);

        appId.setEnabled(false);
        appId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appIdActionPerformed(evt);
            }
        });

        accept.setText("Accept");
        accept.setEnabled(false);
        accept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptActionPerformed(evt);
            }
        });

        reject.setText("Reject");
        reject.setEnabled(false);
        reject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectActionPerformed(evt);
            }
        });

        jobNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jobNameLabel.setText("Job Name");
        jobNameLabel.setEnabled(false);

        descLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        descLabel.setText("Description");
        descLabel.setEnabled(false);

        jobTypeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jobTypeLabel.setText("Job Type");
        jobTypeLabel.setEnabled(false);

        deadLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deadLabel.setText("Deadline");
        deadLabel.setEnabled(false);

        urlLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        urlLabel.setText("Url");
        urlLabel.setEnabled(false);

        locLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        locLabel.setText("Location");
        locLabel.setEnabled(false);

        jobIdLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jobIdLabel.setText("Job ID");
        jobIdLabel.setEnabled(false);

        jobNameField.setEnabled(false);

        descField.setEnabled(false);

        jobIdField.setEnabled(false);

        jobTypeField.setEnabled(false);

        locField.setEnabled(false);

        urlField.setEnabled(false);

        deadField.setEnabled(false);

        post.setText("Post");
        post.setEnabled(false);
        post.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postActionPerformed(evt);
            }
        });

        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(appId, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(accept)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(reject))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(logout, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(accRej, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(viewApp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                                    .addComponent(postJob, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jobNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jobIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(descLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jobTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(locLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(urlLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jobNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(descField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jobIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jobTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(locField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(urlField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deadField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(post, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(189, 189, 189))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(postJob)
                        .addGap(30, 30, 30)
                        .addComponent(viewApp)
                        .addGap(27, 27, 27)
                        .addComponent(accRej)
                        .addGap(27, 27, 27)
                        .addComponent(logout)
                        .addGap(32, 32, 32)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(appId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(accept)
                            .addComponent(reject)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jobIdLabel)
                            .addComponent(jobIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jobNameLabel)
                            .addComponent(jobNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(descLabel)
                            .addComponent(descField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jobTypeLabel)
                            .addComponent(jobTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(locLabel)
                            .addComponent(locField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deadLabel)
                            .addComponent(deadField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(urlLabel)
                            .addComponent(urlField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(post)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void accRejActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accRejActionPerformed
        jLabel1.setEnabled(true);
        appId.setEnabled(true);
        accept.setEnabled(true);
        reject.setEnabled(true);
        jobIdLabel.setEnabled(false);
        jobNameLabel.setEnabled(false);
        descLabel.setEnabled(false);
        jobTypeLabel.setEnabled(false);
        locLabel.setEnabled(false);
        deadLabel.setEnabled(false);
        urlLabel.setEnabled(false);
        jobIdField.setEnabled(false);
        jobNameField.setEnabled(false);
        descField.setEnabled(false);
        jobTypeField.setEnabled(false);
        locField.setEnabled(false);
        deadField.setEnabled(false);
        urlField.setEnabled(false);
        post.setEnabled(false);

    }//GEN-LAST:event_accRejActionPerformed

    private void postJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postJobActionPerformed
        jLabel1.setEnabled(false);
        appId.setEnabled(false);
        accept.setEnabled(false);
        reject.setEnabled(false);
        jobIdLabel.setEnabled(true);
        jobNameLabel.setEnabled(true);
        descLabel.setEnabled(true);
        jobTypeLabel.setEnabled(true);
        locLabel.setEnabled(true);
        deadLabel.setEnabled(true);
        urlLabel.setEnabled(true);
        jobIdField.setEnabled(true);
        jobNameField.setEnabled(true);
        descField.setEnabled(true);
        jobTypeField.setEnabled(true);
        locField.setEnabled(true);
        deadField.setEnabled(true);
        urlField.setEnabled(true);
        post.setEnabled(true);
        
    }//GEN-LAST:event_postJobActionPerformed

    private void viewAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAppActionPerformed
        try {
            jLabel1.setEnabled(false);
            appId.setEnabled(false);
            accept.setEnabled(false);
            reject.setEnabled(false);
            jobIdLabel.setEnabled(false);
            jobNameLabel.setEnabled(false);
            descLabel.setEnabled(false);
            jobTypeLabel.setEnabled(false);
            locLabel.setEnabled(false);
            deadLabel.setEnabled(false);
            urlLabel.setEnabled(false);
            jobIdField.setEnabled(false);
            jobNameField.setEnabled(false);
            descField.setEnabled(false);
            jobTypeField.setEnabled(false);
            locField.setEnabled(false);
            deadField.setEnabled(false);
            urlField.setEnabled(false);
            post.setEnabled(false);
            String[] columns = new String[] {
                "Application Id","Job Id", "Job Name", "Applicant Name", "DOB",
                "Email","Contact","Major","Graduation Date","GPA","Profile URl",
                "Job Status"
            };
            JFrame frame1;
            frame1 = new JFrame("Application");
            frame1.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            frame1.setBounds(200, 200, 200, 200);
            frame1.setLayout(new BorderLayout()); 
            DefaultTableModel model = new DefaultTableModel();
            model.setColumnIdentifiers(columns);
            JTable table = new JTable();
            table.setModel(model);
            JScrollPane scroll = new JScrollPane(table);
            scroll.setHorizontalScrollBarPolicy(
                    JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
            scroll.setVerticalScrollBarPolicy(
                    JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://localhost\\SQLEXPRESS:1433;database=IST659Project";
            Connection con=DriverManager.getConnection(url,"sa","root");
            Statement stmt = con.createStatement();
            String SQL = "select appj.applicationId,appj.jobId,jb.jobName,stud.studentName,stud.dob,stud.email,stud.contact,stud.major,stud.expectedGraduation,stud.currentGPA,stud.profileURL,appj.jobStatus\n" +
                         "FROM (select * from dbo.appliedjobs) appj JOIN (select * from dbo.student) stud on appj.studentId = stud.studentId\n" +
                         "JOIN (select * from dbo.jobs) jb on appj.jobId=jb.jobId where jb.posterId='"+id+"'";
            ResultSet rs = stmt.executeQuery(SQL);
            int i =0;
            while(rs.next())
            {
                String applid = rs.getString("applicationId");
                String jobid = rs.getString("jobId");
                String jobname = rs.getString("jobName");
                String appname = rs.getString("studentName");
                String dob = rs.getString("dob"); 
                String email = rs.getString("email");
                String cont = rs.getString("contact");
                String maj = rs.getString("major");
                String gdate = rs.getString("expectedGraduation");
                String gpa = rs.getString("currentGPA");
                String profurl = rs.getString("profileURL");
                String jstatus = rs.getString("jobStatus");
                model.addRow(new Object[]{applid,jobid, jobname, appname, dob, email, cont, maj,gdate,gpa,profurl,jstatus });
                i++; 
                frame1.add(scroll);
                frame1.setVisible(true);
                frame1.setSize(800,500);
            }
            if(i <1)
            {
                JOptionPane.showMessageDialog(null, "No Applications Found","Error",
                        JOptionPane.ERROR_MESSAGE);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(employer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(employer.class.getName()).log(Level.SEVERE, null, ex);
        }
         

    }//GEN-LAST:event_viewAppActionPerformed

    private void acceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptActionPerformed
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://localhost\\SQLEXPRESS:1433;database=IST659Project";
            Connection con=DriverManager.getConnection(url,"sa","root");
            Statement stmt = con.createStatement();
            String app = appId.getText();
            if(! isEmpty(app)){
            String SQL = "Select count(*) as cnt from dbo.appliedjobs where applicationId="+app;
            ResultSet rs = stmt.executeQuery(SQL);
            if(rs.next() != false && Integer.parseInt(rs.getString("cnt")) == 1){
                String sql2 = "Update dbo.appliedjobs set jobStatus='accepted' where applicationId="+app;
                stmt.executeUpdate(sql2);
                JOptionPane.showMessageDialog(null, "Application ID "+app+" Accepted","Success",
                        JOptionPane.INFORMATION_MESSAGE);
                
            }
            else{
                JOptionPane.showMessageDialog(null, "Invalid Application ID","Error",
                        JOptionPane.ERROR_MESSAGE);
            }
            }
            else{
                JOptionPane.showMessageDialog(null, "Invalid Application ID","Error",
                    JOptionPane.ERROR_MESSAGE);
            }
            
           
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(application.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(application.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_acceptActionPerformed

    private void rejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectActionPerformed
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://localhost\\SQLEXPRESS:1433;database=IST659Project";
            Connection con=DriverManager.getConnection(url,"sa","root");
            Statement stmt = con.createStatement();
            String app = appId.getText();
            if(! isEmpty(app)){
            String SQL = "Select count(*) as cnt from dbo.appliedjobs where applicationId="+app;
            ResultSet rs = stmt.executeQuery(SQL);
            if(rs.next() != false && Integer.parseInt(rs.getString("cnt")) == 1){
                String sql2 = "Update dbo.appliedjobs set jobStatus='rejected' where applicationId="+app;
                stmt.executeUpdate(sql2);
                JOptionPane.showMessageDialog(null, "Application ID "+app+" Rejected","Success",
                        JOptionPane.INFORMATION_MESSAGE);
                
            }
            else{
                JOptionPane.showMessageDialog(null, "Invalid Application ID","Error",
                        JOptionPane.ERROR_MESSAGE);
            }
            }
            else{
                JOptionPane.showMessageDialog(null, "Invalid Application ID","Error",
                    JOptionPane.ERROR_MESSAGE);
            }
            
           
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(application.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(application.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rejectActionPerformed

    private void postActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postActionPerformed
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://localhost\\SQLEXPRESS:1433;database=IST659Project";
            Connection con=DriverManager.getConnection(url,"sa","root");
            String jobId = jobIdField.getText();
            String jobName = jobNameField.getText();
            String desc = descField.getText();
            String jobType = jobTypeField.getText();
            String loc = locField.getText();
            String dead = deadField.getText();
            String urls = urlField.getText();
            Statement stmt = con.createStatement();
            String SQL = "insert into dbo.jobs values ("+jobId+",'"+jobName+"','"+desc+"','"+jobType+"','"+loc+"','"+dead+"','"+urls+"','"+id+"')";
            stmt.executeUpdate(SQL);
            JOptionPane.showMessageDialog(null, "Job "+jobId+" Posted Successfully","Success",
                        JOptionPane.INFORMATION_MESSAGE);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(employer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(employer.class.getName()).log(Level.SEVERE, null, ex);
        }
        jobIdField.setText("");
        jobNameField.setText("");
        descField.setText("");
        jobTypeField.setText("");
        locField.setText("");
        deadField.setText("");
        urlField.setText("");
        jobIdLabel.setEnabled(false);
        jobNameLabel.setEnabled(false);
        descLabel.setEnabled(false);
        jobTypeLabel.setEnabled(false);
        locLabel.setEnabled(false);
        deadLabel.setEnabled(false);
        urlLabel.setEnabled(false);
        jobIdField.setEnabled(false);
        jobNameField.setEnabled(false);
        descField.setEnabled(false);
        jobTypeField.setEnabled(false);
        locField.setEnabled(false);
        deadField.setEnabled(false);
        urlField.setEnabled(false);
        post.setEnabled(false);
    }//GEN-LAST:event_postActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        mainPage mainPage = new mainPage();
        this.dispose();
        mainPage.setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed

    private void appIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_appIdActionPerformed

    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
/*        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new student().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accRej;
    private javax.swing.JButton accept;
    private javax.swing.JTextField appId;
    private javax.swing.JTextField deadField;
    private javax.swing.JLabel deadLabel;
    private javax.swing.JTextField descField;
    private javax.swing.JLabel descLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jobIdField;
    private javax.swing.JLabel jobIdLabel;
    private javax.swing.JTextField jobNameField;
    private javax.swing.JLabel jobNameLabel;
    private javax.swing.JTextField jobTypeField;
    private javax.swing.JLabel jobTypeLabel;
    private javax.swing.JTextField locField;
    private javax.swing.JLabel locLabel;
    private javax.swing.JButton logout;
    private javax.swing.JButton post;
    private javax.swing.JButton postJob;
    private javax.swing.JButton reject;
    private javax.swing.JTextField urlField;
    private javax.swing.JLabel urlLabel;
    private javax.swing.JButton viewApp;
    // End of variables declaration//GEN-END:variables
}
